<?xml version="1.0" encoding="UTF-8"?>
<Configuration monitorInterval="1" status="INFO" strict="true" name="LogConfig">
  <Properties>
    <Property name="logbasedir">logs</Property>
    <Property name="log.layout">%d %p %class{1.} [%t] %m %ex%n</Property>
  </Properties>
  <Appenders>

    <RandomAccessFile name="RandomAccessFile" fileName="${logbasedir}/flink.log"
      immediateFlush="false" append="false">
      <PatternLayout>
        <Charset>UTF-8</Charset>
        <Pattern>${log.layout}</Pattern>
      </PatternLayout>
    </RandomAccessFile>

    <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
    <File name="log" fileName="${logbasedir}/flink-log.log" append="false">
      <PatternLayout pattern="%d{HH:mm:ss.SSS} %-5level %class{36} %L %M - %msg%xEx%n"/>
    </File>
    <!-- 这个会打印出所有的info及以下级别的信息，每次大小超过size，则这size大小的日志会自动存入按年份-月份建立的文件夹下面并进行压缩，作为存档-->
    <RollingFile name="RollingFileInfo" fileName="${logbasedir}/info.log"
      filePattern="${logbasedir}/$${date:yyyy-MM}/info-%d{yyyy-MM-dd}-%i.log">
      <!--控制台只输出level及以上级别的信息（onMatch），其他的直接拒绝（onMismatch）-->
      <ThresholdFilter level="info" onMatch="ACCEPT" onMismatch="DENY"/>
      <PatternLayout pattern="[%d{HH:mm:ss:SSS}] [%p] - %l - %m%n"/>
      <Policies>
        <TimeBasedTriggeringPolicy/>
        <SizeBasedTriggeringPolicy size="100 MB"/>
      </Policies>
    </RollingFile>
    <Console name="STDOUT">
      <PatternLayout pattern="${log.layout}"/>
    </Console>
  </Appenders>

  <Loggers>
    <!-- pattern layout actually uses location, so we need to include it -->
    <AsyncLogger name="com.luogh" level="INFO" includeLocation="true" >
      <AppenderRef ref="RandomAccessFile"/>
    </AsyncLogger>
   <!-- <logger name="com.luogh" level="INFO" includeLocation="true">
      <AppenderRef ref="log"/>
      <AppenderRef ref="STDOUT"/>
    </logger>-->
    <Root level="INFO" includeLocation="true">
      <AppenderRef ref="STDOUT"/>
    </Root>
  </Loggers>
</Configuration>